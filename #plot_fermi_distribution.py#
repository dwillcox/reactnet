# Plots a very schematic 'cartoon' example of the URCA reactions using rates estimated from Toki 2013.
import numpy as np
import matplotlib.pyplot as plt

# In units of the Fermi energy
energy = np.linspace(0.0, 2.0, 1000, endpoint=True)
ceiling = np.ones(1000)

# Degeneracy parameter
eta = 10.0

# Distribution
F = (np.exp(eta*(energy-1))+1.0)**(-1)

# Plot
#with plt.xkcd():
fig = plt.figure()
ax = fig.add_subplot(111)
#plt.xticks([0, 1.0, 2.0])
#plt.yticks([0, 1.0])
plt.xticks([])
plt.yticks([])
ax.set_ylim([0.0, 1.2])
ax.set_xlim([0, energy[-1]])
ax.plot(energy, F, color='black')
    #    hs_font_property = font_man.FontProperties(fname='/home/eugene/classes/stars/talk/Humor-Sans.ttf', size=20)
    #    for txt in ax.texts:
    #        txt.set_fontproperties(hs_font_property)
#plt.tick_params(axis='x', which='both', bottom='off', top='off', labelbottom='on')
#plt.tick_params(axis='y', which='both', left='off', right='off', labelleft='on')    
ax.fill_between(energy, F, 1, hatch='/', edgecolor="none", linewidth=0.0, color="white")
ax.plot(energy, ceiling, color='black', linestyle='--')
#ax.text(0.5, 0.5, 'capture')
#ax.text(1.5, 0.5, 'emission')
fig.set_size_inches(5,3)

xmin, xmax = ax.get_xlim()
ymin, ymax = ax.get_ylim()

# removing the default axis on all sides:
for side in ['bottom','right','top','left']:
        ax.spines[side].set_visible(False)

# removing the axis ticks
# plt.xticks([]) # labels
# plt.yticks([])
ax.xaxis.set_ticks_position('none') # tick markers
ax.yaxis.set_ticks_position('none')

# wider figure for demonstration
fig.set_size_inches(4,2.2)

# get width and height of axes object to compute
# matching arrowhead length and width
dps = fig.dpi_scale_trans.inverted()
bbox = ax.get_window_extent().transformed(dps)
width, height = bbox.width, bbox.height

# manual arrowhead width and length
hw = 1./20.*(ymax-ymin)
hl = 1./20.*(xmax-xmin)
lw = 1. # axis line width
ohg = 0.3 # arrow overhang

# compute matching arrowhead length and width
yhw = hw/(ymax-ymin)*(xmax-xmin)* height/width
yhl = hl/(xmax-xmin)*(ymax-ymin)* width/height

# draw x and y axis
ax.arrow(xmin, 0, xmax-xmin, 0., fc='k', ec='k', lw = lw,
         head_width=hw, head_length=hl, overhang = ohg,
         length_includes_head= True, clip_on = False)

ax.arrow(0, ymin, 0., ymax-ymin, fc='k', ec='k', lw = lw,
         head_width=yhw, head_length=yhl, overhang = ohg,
         length_includes_head= True, clip_on = False) 

#plt.xlabel('$E/E_F$')
#plt.ylabel('$F_{e}$')
#ax.text(1.025, -0.05, '$E/E_F$', transform=ax.transAxes)
#ax.text(-0.01, 1.05, '$F$', transform=ax.transAxes)
#plt.legend(handles=[na23_h, ne23_h], loc='center right')
#plt.title(which_den+' density URCA', y = 1.01)

plt.tight_layout(pad=3, w_pad = 3, h_pad=1.0)
plt.savefig('fermi_degeneracy.png', dpi=300)
plt.savefig('fermi_degeneracy.pdf')    
